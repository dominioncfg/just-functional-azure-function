name: 'Terraform'
 
on:
  push:
    branches:
    - main
  pull_request:

permissions:
  contents: read
  id-token: write
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

      TF_RESOUCE_GROUP: ${{ secrets.TF_RESOUCE_GROUP }}
      TF_STORAGE_ACCOUNT: ${{ secrets.TF_STORAGE_ACCOUNT }}
      TF_CONTAINER_NAME: ${{ secrets.TF_CONTAINER_NAME}}
      TF_FILE_NAME: ${{ secrets.TF_FILE_NAME }}
      AZURE_FUNCTION_CORS: ${{ secrets.AZURE_FUNCTION_CORS }}
    runs-on: ubuntu-latest
    environment: production
 
    defaults:
      run:
        shell: bash
 
    steps:   
    
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        client-id: ${{ env.ARM_CLIENT_ID }}
        tenant-id: ${{ env.ARM_TENANT_ID }}
        subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.5
        terraform_wrapper: false
 
    - name: Terraform Format
      working-directory: terraform
      run: terraform fmt

    - name: Terraform Init
      working-directory: terraform
      run: |
        terraform init  \
        -backend-config="resource_group_name=$TF_RESOUCE_GROUP" \
        -backend-config="storage_account_name=$TF_STORAGE_ACCOUNT" \
        -backend-config="container_name=$TF_CONTAINER_NAME" \
        -backend-config="key=$TF_FILE_NAME" \

    - name: Terraform Validate
      working-directory: terraform   
      run: terraform validate       
      
    - name: Terraform Plan
      working-directory: terraform   
      run: |
        terraform plan \
        -var "functions_cors=$AZURE_FUNCTION_CORS"
      
    - name: Terraform Apply
      working-directory: terraform   
      run: |
        terraform apply \
        -auto-approve \
        -var "functions_cors=$AZURE_FUNCTION_CORS"

    - name: Save Terraform's Output To Environment Variables
      working-directory: terraform   
      run: |
       echo "TF_OUTPUT_RESOURCE_GROUP_NAME=$(terraform output resource_group_name)" >> $GITHUB_ENV
       echo "TF_OUTPUT_FUNCTION_APP_NAME=$(terraform output function_app_name)" >> $GITHUB_ENV
    
    - name: Get Publish Profile
      id: getPublishProfile
      run: |
        echo "AZ_FUNCTION_PUBLISH_PROFILE=$(az functionapp deployment list-publishing-profiles -g ${{ env.TF_OUTPUT_RESOURCE_GROUP_NAME }} -n ${{ env.TF_OUTPUT_FUNCTION_APP_NAME }} --xml)" >> $GITHUB_ENV
     
      
    
    

    