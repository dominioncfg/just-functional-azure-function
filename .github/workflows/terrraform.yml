name: 'Terraform'
 
on:
  push:
    branches:
    - main
  pull_request:
 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

      TF_RESOUCE_GROUP: ${{ secrets.TF_RESOUCE_GROUP }}
      TF_STORAGE_ACCOUNT: ${{ secrets.TF_STORAGE_ACCOUNT }}
      TF_CONTAINER_NAME: ${{ secrets.TF_CONTAINER_NAME}}
      TF_FILE_NAME: ${{ secrets.TF_FILE_NAME }}
    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.5
 
    - name: Terraform Format
      working-directory: terraform
      run: terraform fmt

    - name: Terraform Init
      working-directory: terraform
      run: terraform init  \
            -backend-config='resource_group_name=$TF_RESOUCE_GROUP' -backend-config='storage_account_name=$TF_STORAGE_ACCOUNT' -backend-config='container_name=$TF_CONTAINER_NAME' -backend-config='key=$TF_FILE_NAME'

    - name: Terraform Validate
      working-directory: terraform   
      run: terraform validate       
      
    - name: Terraform Plan
      working-directory: terraform   
      run: terraform plan
      
    - name: Terraform Apply
      working-directory: terraform   
      run: terraform apply -auto-approve
      
    
    

    